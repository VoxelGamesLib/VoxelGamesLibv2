buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.41"
        classpath 'net.sf.proguard:proguard-gradle:6.0.3'
    }
}

plugins {
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '2.0.2'
    id 'com.github.ben-manes.versions' version '0.17.0'
}

group = 'com.voxelgameslib'

import org.apache.tools.ant.filters.ReplaceTokens

ext {
    testServerFolder = "${rootProject.rootDir}/testserver/plugins"
}

apply from: "${rootProject.rootDir}/generateRebel.gradle"

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'idea'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    defaultTasks 'clean', 'build'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.destroystokyo.com/repository/maven-public/" }
        maven { url "https://voxelgameslib.github.io/VoxelGamesLibv2/mvn-repo" }
        maven { url "https://oss.sonatype.org/content/groups/public/" }
        maven { url "https://repo.aikar.co/content/groups/aikar/" }
        maven { url "https://raw.githubusercontent.com/allanmc/JSkills/mvn-repo/" }
        maven { url "http://dl.bintray.com/etienne/java-utilities" }
        maven { url "http://repo.bstats.org/content/repositories/releases/" }
        maven { url "http://repo.dmulloy2.net/content/groups/public/" }
        maven { url "http://repo.maven.apache.org/maven2" }
        maven { url "http://repo.onarandombox.com/content/groups/public/" }
        maven { url "http://repo.inventivetalent.org/content/repositories/snapshots/" }
    }

    dependencies {
        compileOnly group: 'com.destroystokyo.paper', name: 'paper-api', version: '1.12.2-R0.1-SNAPSHOT'
        testCompile group: 'com.destroystokyo.paper', name: 'paper-api', version: '1.12.2-R0.1-SNAPSHOT'
        compileOnly group: 'com.destroystokyo.paper', name: 'paper', version: '1.12.2-R0.1-SNAPSHOT'
        testCompile group: 'com.destroystokyo.paper', name: 'paper', version: '1.12.2-R0.1-SNAPSHOT'

        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'org.mockito', name: 'mockito-core', version: '2.18.3'

        compileOnly group: 'com.comphenix.protocol', name: 'ProtocolLib', version: '4.4.0-SNAPSHOT'
    }

    ext {
        if (System.getenv('CI_BUILD')) {
            def output = new ByteArrayOutputStream()
            exec {
                standardOutput = output
                commandLine 'git', 'rev-parse', '--short', 'HEAD'
                workingDir = project.projectDir
            }
            revision = output.toString().trim()
        }else{
            revision = "local"
        }
    }

    processResources {
        filter ReplaceTokens, tokens: [
            'version': version + "@" + revision
        ]
    }

    task javadocJar(type: Jar) {
        classifier 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier 'sources'
        from sourceSets.main.allSource
    }

    compileJava {
        options.compilerArgs += ["-parameters"]
        options.fork = true
    }

    javadoc {
        options.stylesheetFile = new File(rootProject.rootDir, "VoxelGamesLib/src/main/javadocs/javadoc_stylesheet.css")
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    configurations.all {
        // Check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    if (project.projectDir.parent.endsWith("games")) {
        dependencies {
            compileOnly project(":VoxelGamesLib")
        }

        task copyToServer(type: Copy) {
            from jar
            into testServerFolder
        }
    }
}